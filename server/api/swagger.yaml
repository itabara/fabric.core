---
swagger: "2.0"
info:
  description: "Wish Fabric API (Integration)"
  version: "1.0.1"
  title: "Wish Fabric Api - Middleware to Fabric"
  contact:
    email: "you@your-company.com"
host: "fabric-core.heg-development.com"
tags:
- name: "ServerPackage"
- name: "HostingAccount"
- name: "FTP"
- name: "Database"
- name: "DatabaseBackup"
- name: "Backup"
- name: "Misc"
- name: "HealthCheck"
schemes:
- "https"
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /provisioning/package:
    post:
      tags:
      - "ServerPackage"
      summary: "Provision a server package instance with limits defined by Brand API"
      description: "This will create a server package instance. Package definition\
        \ available at http://brand-api.heg-development.com/api/v1.0/windows/1\n"
      operationId: "createServerPackage"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - in: "body"
        name: "package_info"
        description: "The server package to be provisioned"
        required: true
        schema:
          $ref: "#/definitions/ServerPackage"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServerPackage"
  /provisioning/package/{package_id}/hosting:
    post:
      tags:
      - "HostingAccount"
      summary: "Provision a hosting account instance"
      description: "This will create a hosting account instance.\n"
      operationId: "provisioningPackagePackage_idHostingPOST"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "hosting_account"
        description: "The hosting account details with package quotas."
        required: false
        schema:
          $ref: "#/definitions/HostingAccount"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        409:
          description: "An existing 'hosting_name' already exists"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}:
    get:
      tags:
      - "HostingAccount"
      summary: "Retrieve hosting account details"
      description: "Retrives hosting details\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      responses:
        200:
          description: "HostingAccount details"
          schema:
            $ref: "#/definitions/HostingAccountInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
    put:
      tags:
      - "HostingAccount"
      summary: "Allow disk quotas change. Potentially to be used to move HostingAccount\
        \ to another cluster."
      operationId: "provisioningPackagePackage_idHostingHosting_account_idPUT"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - in: "body"
        name: "hosting_info"
        description: "The hosting account details to be updated."
        required: false
        schema:
          $ref: "#/definitions/HostingAccount"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
    delete:
      tags:
      - "HostingAccount"
      summary: "Delete hosting account"
      description: "This will remove the hosting account details. AD entries are removed.\
        \ Webspace data are moved to /backup/<snapshot> for x days and\nremoved from\
        \ original location. IIS details are removed. Optional LB info removed (ssl).\
        \ Additional ftp users removed/disabled. Log files\ninto /backup/snapshot/logs/archive.\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDELETE"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/status:
    get:
      tags:
      - "HostingAccount"
      summary: "Retrive HostingAccount status"
      description: "Get the status of HostingAccount\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idStatusGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      responses:
        200:
          description: "Retrieve HostingAccount status"
          schema:
            $ref: "#/definitions/HostingAccountStatus"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
    put:
      tags:
      - "HostingAccount"
      summary: "Enable/Disable the HostingAccount"
      description: "It enable/disable the HostingAccount\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idStatusPUT"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - in: "body"
        name: "hosting_status"
        description: "Status Change"
        required: true
        schema:
          $ref: "#/definitions/hosting_status"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/ftp:
    get:
      tags:
      - "FTP"
      summary: "Retrive the list of ftp accounts"
      description: "The list of ftp account info\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idFtpGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      responses:
        200:
          description: "Array of FtpUserInfo"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FtpUserInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "FTP"
    post:
      tags:
      - "FTP"
      summary: "Create a ftp user for current HostingAccount"
      description: "Create a ftp user with required parameters\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idFtpPOST"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - in: "body"
        name: "ftpUserCreate"
        description: "The ftp details"
        required: false
        schema:
          $ref: "#/definitions/ftpUserCreate"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        409:
          description: "An existing ftp 'username' already exists"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "FTP"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/ftp/{ftp_username}:
    get:
      tags:
      - "FTP"
      summary: "Get ftp user"
      description: "Retrieves ftp user account details\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idFtpFtp_usernameGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "ftp_username"
        in: "path"
        description: "Current FTP username"
        required: true
        type: "string"
      responses:
        200:
          description: "Retrieve the ftp details"
          schema:
            $ref: "#/definitions/FtpUserInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "FTP"
    put:
      tags:
      - "FTP"
      summary: "Edit ftp user details"
      description: "Edit ftp user. Cannot edit username.\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idFtpFtp_usernamePUT"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "ftp_username"
        in: "path"
        description: "Current FTP username"
        required: true
        type: "string"
      - in: "body"
        name: "ftpUserUpdate"
        description: "The ftp details"
        required: false
        schema:
          $ref: "#/definitions/ftpUserUpdate"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        409:
          description: "An existing ftp 'username' already exists"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "FTP"
    delete:
      tags:
      - "FTP"
      summary: "Delete ftp user"
      description: "It will remove the ftp user. Cannot remove primary ftp account\
        \ (admin@hosting_name)\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idFtpFtp_usernameDELETE"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "ftp_username"
        in: "path"
        description: "Current FTP username"
        required: true
        type: "string"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "FTP"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/database:
    get:
      tags:
      - "Database"
      summary: "Retrieve hosting account databases list"
      description: "Retrives the list of provisioned databases with details\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabaseGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      responses:
        200:
          description: "Array of DatabaseInfo"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DatabaseInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
    post:
      tags:
      - "Database"
      summary: "Provision a new database on hosting cluster"
      description: "Create a database instance with required parameters. We assume\
        \ a group of WebClusters will have own database cluster.\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabasePOST"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - in: "body"
        name: "databaseCreate"
        description: "The database details."
        required: false
        schema:
          $ref: "#/definitions/databaseCreate"
      responses:
        202:
          description: "Create a database instance"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        409:
          description: "An existing database 'db_name' already exists"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/database/{database_name}:
    get:
      tags:
      - "HostingAccount"
      summary: "Query database info"
      description: "Retrieve database specific details\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabaseDatabase_nameGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "database_name"
        in: "path"
        description: "Database name"
        required: true
        type: "string"
      responses:
        200:
          description: "Database details"
          schema:
            $ref: "#/definitions/DatabaseInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
    put:
      tags:
      - "Database"
      summary: "Edit database details"
      description: "Edit database details. Support database id or name \"/provisioning/hosting/{hosting_name}/database/{database_name}\"\
        \n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabaseDatabase_namePUT"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "database_name"
        in: "path"
        description: "Database name"
        required: true
        type: "string"
      - in: "body"
        name: "databaseUpdate"
        description: "The database details to be updated"
        required: false
        schema:
          $ref: "#/definitions/databaseUpdate"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
    delete:
      tags:
      - "Database"
      summary: "Remove database"
      description: "It will remove the database and move it to snapshot for 30 days.\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabaseDatabase_nameDELETE"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "database_name"
        in: "path"
        description: "Database name"
        required: true
        type: "string"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/database/{database_name}/backup:
    get:
      tags:
      - "DatabaseBackup"
      summary: "Get database backups"
      description: "Get the available backups for the database"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabaseDatabase_nameBackupGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "database_name"
        in: "path"
        description: "Database name"
        required: true
        type: "string"
      responses:
        200:
          description: "Backup current database"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BackupInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "DatabaseBackup"
    post:
      tags:
      - "DatabaseBackup"
      summary: "Backup specified database"
      description: "Create a database backup with required parameters. The platform\
        \ will store the backup file and provide relative path from customer webspace.\n"
      operationId: "backupDatabase"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "database_name"
        in: "path"
        description: "Database name"
        required: true
        type: "string"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "DatabaseBackup"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/database/{database_name}/restore:
    get:
      tags:
      - "DatabaseBackup"
      summary: "Get database restores"
      description: "Get database restores"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabaseDatabase_nameRestoreGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "database_name"
        in: "path"
        description: "Database name"
        required: true
        type: "string"
      responses:
        200:
          description: "Retrieve the restore history for the database"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RestoreInfo"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting or database not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "DatabaseBackup"
    post:
      tags:
      - "DatabaseBackup"
      summary: "Restore database content from the specified backup"
      description: "Restore database content from the specified backup\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabaseDatabase_nameRestorePOST"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "database_name"
        in: "path"
        description: "Database name"
        required: true
        type: "string"
      - in: "body"
        name: "databaseRestore"
        description: "The database details."
        required: false
        schema:
          $ref: "#/definitions/databaseRestore"
      responses:
        202:
          description: "Restore the backup content into database"
          schema:
            $ref: "#/definitions/FabricTask"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting or database not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "DatabaseBackup"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/database/user:
    get:
      tags:
      - "Database"
      summary: "Retrieve a list of database users"
      description: "Retrieve the list of database users for a hosting account\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabaseUserGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      responses:
        200:
          description: "Retrieve the list of database users for a hosting account"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DatabaseUserInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
    post:
      tags:
      - "Database"
      summary: "Create a new database user"
      description: "Create a new database user\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabaseUserPOST"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - in: "body"
        name: "databaseUserCreate"
        description: "The database user details"
        required: false
        schema:
          $ref: "#/definitions/databaseUserCreate"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/database/user/{db_username}:
    get:
      tags:
      - "Database"
      summary: "Get an existing database user"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabaseUserDb_usernameGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "db_username"
        in: "path"
        description: "Database user identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Get an existing database user"
          schema:
            $ref: "#/definitions/DatabaseUserInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
    put:
      tags:
      - "Database"
      summary: "Update an existing database user"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabaseUserDb_usernamePUT"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "db_username"
        in: "path"
        description: "Database user identifier"
        required: true
        type: "string"
      - in: "body"
        name: "databaseUserUpdate"
        description: "The database user details"
        required: false
        schema:
          $ref: "#/definitions/databaseUserUpdate"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
    delete:
      tags:
      - "Database"
      summary: "Delete an existing database user"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idDatabaseUserDb_usernameDELETE"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "db_username"
        in: "path"
        description: "Database user identifier"
        required: true
        type: "string"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/backup:
    get:
      tags:
      - "Backup"
      summary: "Get the list of backups"
      description: "Get list of available webspace backups\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idBackupGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      responses:
        200:
          description: "List of available hosting backups"
          schema:
            $ref: "#/definitions/BackupInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backup"
    post:
      tags:
      - "Backup"
      summary: "Backup the webspace of the hosting account"
      description: "Create a webspace backup with specified parameters. Platform will\
        \ manage the backup location and archives file(s)\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idBackupPOST"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - in: "body"
        name: "backupSource"
        description: "Path to folders to backup (if root, then full backup)"
        required: false
        schema:
          $ref: "#/definitions/backupSource"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backup"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/restore:
    get:
      tags:
      - "Backup"
      summary: "Get hosting restoration history/logs"
      description: "Get hosting restoration history/logs"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idRestoreGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      responses:
        200:
          description: "Retrieve the hosting restoration history, the log of the unzip/write\
            \ operation"
          schema:
            $ref: "#/definitions/RestoreInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backup"
    post:
      tags:
      - "Backup"
      summary: "Restore webspace content from specified backup file."
      description: "Restore a webspace backup from specified archive.\n"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idRestorePOST"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - in: "body"
        name: "webspaceRestore"
        description: "If not provided then restore latest backup file"
        required: false
        schema:
          $ref: "#/definitions/webspaceRestore"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backup"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/ls/{depth}:
    get:
      tags:
      - "Misc"
      summary: "Retrieve list of dirs starting from hosting's root folder"
      description: "Retrieve list of dirs starting from hosting's root folder"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idLsDepthGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "depth"
        in: "path"
        description: "depth level of folders to display"
        required: true
        type: "integer"
      responses:
        200:
          description: "List of hierarchy dirs (JSON)"
          schema:
            type: "string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/security/access:
    get:
      tags:
      - "Misc"
      summary: "Retrieve list of IP access security rules"
      description: "Retrieve list of IP access security rules"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idSecurityAccessGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      responses:
        200:
          description: "list of IP Security Rules"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IPSecurity"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
    post:
      tags:
      - "Misc"
      summary: "Add IP access security rule"
      description: "Add IP access security rule"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idSecurityAccessPOST"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - in: "body"
        name: "securityRuleCreate"
        description: "Security rule details"
        required: true
        schema:
          $ref: "#/definitions/securityRuleCreate"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/security/access/{rule_id}:
    put:
      tags:
      - "Misc"
      summary: "Modify IP access security rule"
      description: "Modify IP access security rule"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idSecurityAccessRule_idPUT"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "rule_id"
        in: "path"
        description: "ip rule identifier"
        required: true
        type: "string"
      - in: "body"
        name: "securityRuleUpdate"
        description: "Security rule updates"
        required: true
        schema:
          $ref: "#/definitions/securityRuleUpdate"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
    delete:
      tags:
      - "Misc"
      summary: "Remove IP access security rule"
      description: "Remove IP access security rule"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idSecurityAccessRule_idDELETE"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - name: "rule_id"
        in: "path"
        description: "ip rule identifier"
        required: true
        type: "string"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
  /provisioning/package/{package_id}/hosting/{hosting_account_id}/iis_settings:
    get:
      tags:
      - "Misc"
      summary: "Get IIS settings for hosting account"
      description: "Get IIS settings settings"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idIis_settingsGET"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AppPoolInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
    put:
      tags:
      - "Misc"
      summary: "Update an IIS Setting"
      operationId: "provisioningPackagePackage_idHostingHosting_account_idIis_settingsPUT"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Access token"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Server package instance id"
        required: true
        type: "integer"
        format: "int64"
      - name: "hosting_account_id"
        in: "path"
        description: "Hosting account unique id (PK). Cannot be changed."
        required: true
        type: "integer"
      - in: "body"
        name: "iisSettingsUpdate"
        description: "IIS Settings"
        required: true
        schema:
          $ref: "#/definitions/iisSettingsUpdate"
      responses:
        202:
          description: "Request is accepted and FabricTask '_utid' is returned"
          schema:
            $ref: "#/definitions/FabricTask"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Invalid authorization token"
        404:
          description: "Hosting account not found"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
  /ping:
    get:
      tags:
      - "HealthCheck"
      summary: "Server heartbeat operation"
      description: "Server heartbeat operation"
      operationId: "pingGET"
      parameters: []
      responses:
        200:
          description: "OK"
      x-swagger-router-controller: "HealthCheck"
definitions:
  FabricTask:
    type: "object"
    required:
    - "_utid"
    properties:
      _utid:
        type: "string"
        format: "uuid"
        example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
        description: "Fabric task identifier"
      status:
        type: "string"
        example: "pending"
        description: "Fabric task status/progress"
        enum:
        - "pending"
        - "completed"
        - "error"
  ServerPackage:
    type: "object"
    required:
    - "package_id"
    properties:
      package_id:
        type: "integer"
        format: "int64"
        description: "server package instance id (PK)"
      disk_quota:
        $ref: "#/definitions/QuotaInfo"
      ftp_quota:
        $ref: "#/definitions/QuotaInfo"
      bandwidth_quota:
        $ref: "#/definitions/QuotaInfo"
      db_quota:
        $ref: "#/definitions/QuotaInfo"
      db_max_size:
        $ref: "#/definitions/QuotaInfo"
      region:
        type: "string"
        description: "Allow region of provisioning"
    example:
      package_id: 100001
      disk_quota:
        max_available: 10240
        details: "MB"
      ftp_quota:
        max_available: 5
        details: "count"
      bandwidth_quota:
        unlimited: true
        details: "MB"
      db_quota:
        max_available: 10
        details: "count"
      db_max_size:
        max_available: 1024
        details: "MB"
      region: "Europe"
  HostingAccount:
    type: "object"
    required:
    - "hosting_account_id"
    - "hosting_name"
    properties:
      hosting_account_id:
        type: "integer"
        format: "int64"
        example: 1234567
        description: "Fabric hosting_acount_id (PK)"
        readOnly: true
      hosting_name:
        type: "string"
        description: "HostingAccount name (primary domain)"
      hosting_admin_email:
        type: "string"
        description: "admin email for hosting account"
  HostingAccountStatus:
    type: "object"
    properties:
      status:
        type: "string"
        description: "HostingAccount status"
        enum:
        - "enabled"
        - "disabled"
      comments:
        type: "string"
        description: "Reason of enable/disable change"
  HostingAccountInfo:
    type: "object"
    required:
    - "hosting_account_id"
    properties:
      hosting_account_id:
        type: "integer"
        format: "int64"
        example: 1234567
        description: "Fabric hosting_acount_id (PK)"
      hosting_name:
        type: "string"
        example: "example.com"
        description: "hosting account (primary domain)"
      ftp_quota:
        $ref: "#/definitions/QuotaInfo"
      disk_quota:
        $ref: "#/definitions/QuotaInfo"
      bandwidth_quota:
        $ref: "#/definitions/QuotaInfo"
      stats_json_url:
        type: "string"
        description: "json endpoint to for chart data"
  QuotaInfo:
    type: "object"
    properties:
      max_available:
        type: "integer"
        description: "max quota for feature 'X'"
      consumed:
        type: "integer"
        description: "consumed for feature 'X'"
      unlimited:
        type: "boolean"
        description: "feature is 'unlimited'/'unmetered'"
      details:
        type: "string"
        description: "quota size measure unit (eg. MB)"
  FtpUserInfo:
    type: "object"
    required:
    - "user_id"
    - "username"
    properties:
      user_id:
        type: "string"
        description: "FTP user unique identifier"
      username:
        type: "string"
        example: "admin@example.com"
        description: "FTP username"
      quota:
        type: "integer"
        example: 200
        description: "FTP account quota"
      ftp_path:
        type: "string"
        example: "/www-data"
        description: "FTP account directory"
  DatabaseInfo:
    type: "object"
    required:
    - "database_id"
    - "database_name"
    properties:
      database_id:
        type: "integer"
        format: "int64"
        example: 123456
        description: "Database unique identifier"
      database_name:
        type: "string"
        example: "example-db"
        description: "Database name"
      database_cluster:
        type: "string"
        example: "cluster-mysql-01"
        description: "Database cluster"
      engine_type:
        type: "string"
        example: "Mysql"
        description: "Database engine type"
      db_size:
        type: "integer"
        example: 500
        description: "Database max size (MB)"
      db_actual_size:
        type: "integer"
        example: 0
        description: "Database actual size (MB)"
      users:
        type: "array"
        items:
          $ref: "#/definitions/DatabaseUserInfo"
      db_connection:
        type: "string"
        example: "Server=cluster-mysql-01;Database=example-db;Uid=db-user;Pwd=secret;"
        description: "Friendly DB connection string (eg. ssl, port, etc)"
  DatabaseUserInfo:
    type: "object"
    required:
    - "db_username"
    properties:
      db_username:
        type: "string"
        example: "db-user"
        description: "Database user identifier"
      password:
        type: "string"
      databases:
        type: "array"
        items:
          $ref: "#/definitions/Grant"
  Grant:
    type: "object"
    required:
    - "database_id"
    properties:
      database_id:
        type: "string"
        description: "Database identifier"
      permissions:
        type: "string"
        description: "Grant details"
        enum:
        - "read"
        - "write"
  IPSecurity:
    type: "object"
    properties:
      rule_id:
        type: "string"
        description: "Access rule identifier"
      ip_source:
        type: "string"
        description: "IP Address"
      access_type:
        type: "string"
        description: "Access Type"
        enum:
        - "allow"
        - "deny"
  BackupInfo:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
      type:
        type: "string"
        description: "Web Space or database"
        enum:
        - "storage"
        - "database"
      status:
        type: "string"
        description: "operation status"
        enum:
        - "completed"
        - "inprogress"
        - "faulted"
      completed_date:
        type: "string"
        format: "date-time"
  RestoreInfo:
    type: "object"
    properties:
      name:
        type: "string"
      type:
        type: "string"
        description: "Web Space or database"
        enum:
        - "storage"
        - "database"
      status:
        type: "string"
        description: "operation status"
        enum:
        - "completed"
        - "inprogress"
        - "faulted"
      completed_date:
        type: "string"
        format: "date-time"
      error:
        type: "string"
  AppPoolInfo:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
      pipeline:
        type: "string"
        description: "type"
        enum:
        - "classic"
        - "managed"
      clr_version:
        type: "string"
        description: "runtime"
        enum:
        - "v1.1"
        - "v2.0"
        - "v4.0"
      status:
        type: "string"
        description: "status"
        enum:
        - "started"
        - "stopped"
        - "recycle"
        - "unknown"
  Error:
    type: "object"
    required:
    - "code"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      fields:
        type: "string"
  hosting_status:
    type: "object"
    properties:
      status_change:
        type: "string"
        description: "status"
        enum:
        - "enable"
        - "disable"
      comments:
        type: "string"
        description: "additional comments"
    example:
      status_change: "disable"
      comments: "not paid enough"
  ftpUserCreate:
    type: "object"
    properties:
      username:
        type: "string"
        description: "Ftp username"
      quota:
        type: "integer"
        description: "Ftp account quota"
      ftp_path:
        type: "string"
        description: "Ftp account directory"
    example:
      username: "ftp@example.com"
      quota: 200
      ftp_path: "/www-data"
  ftpUserUpdate:
    type: "object"
    properties:
      username:
        type: "string"
        description: "Ftp username"
      quota:
        type: "integer"
        description: "Ftp account quota"
      ftp_path:
        type: "string"
        description: "Ftp account directory"
    example:
      username: "ftp_changed@example.com"
      quota: 500
      ftp_path: "/www-data"
  databaseCreate:
    type: "object"
    required:
    - "database_name"
    - "database_type"
    - "db_size"
    - "db_user"
    properties:
      database_name:
        type: "string"
        description: "Database name"
      db_user:
        type: "string"
        description: "Database username"
      database_type:
        type: "string"
        description: "Database Engine. Default MSSQL ?"
        enum:
        - "MSsql"
        - "Mysql"
      db_size:
        type: "integer"
        format: "int64"
        description: "Max database size"
    example:
      database_name: "db_example"
      database_type: "Mysql"
      db_user: "user_001"
      db_size: 1024
  databaseUpdate:
    type: "object"
    required:
    - "db_size"
    - "db_users"
    properties:
      db_users:
        type: "array"
        description: "Array of database users"
        items:
          type: "string"
          description: "database username"
      db_size:
        type: "integer"
        format: "int64"
        description: "Max database size"
    example:
      db_users:
      - "user_001"
      - "user_002"
      db_size: 1024
  databaseRestore:
    type: "object"
    properties:
      file_name:
        type: "string"
        description: "Database backup file"
  databaseUserCreate:
    type: "object"
    required:
    - "db_username"
    properties:
      db_username:
        type: "string"
        description: "database username"
      password:
        type: "string"
        description: "password (autogenerated if not provided)"
      grant:
        type: "array"
        description: "grant type list"
        items:
          type: "string"
          enum:
          - "read"
          - "write"
          - "admin"
    example:
      db_username: "user_001"
      grant:
      - "admin"
      - "write"
  databaseUserUpdate:
    type: "object"
    properties:
      password:
        type: "string"
        description: "password (autogenerated if not provided)"
      grant:
        type: "array"
        description: "grant type list"
        items:
          type: "string"
          enum:
          - "read"
          - "write"
          - "admin"
    example:
      password: "mystrongpassword"
      grant:
      - "admin"
      - "write"
  backupSource:
    type: "object"
    properties:
      paths:
        type: "array"
        description: "Array of paths to be backup"
        items:
          type: "string"
    example:
      paths:
      - "file1.txt"
      - "/dir/file2.txt"
  webspaceRestore:
    type: "object"
    properties:
      file_name:
        type: "string"
        description: "the filename of the restore file"
    example:
      file_name: "2017-01-01-www.example.com.tar.gz"
  securityRuleCreate:
    type: "object"
    properties:
      ip_source:
        type: "string"
        description: "source ip of the request"
      access_type:
        type: "string"
        description: "Allow or Deny"
        enum:
        - "allow"
        - "deny"
    example:
      ip_source: "127.0.0.1/24"
      access_type: "allow"
  securityRuleUpdate:
    type: "object"
    properties:
      ip_source:
        type: "string"
        description: "source ip of the request"
      access_type:
        type: "string"
        description: "Allow or Deny"
        enum:
        - "allow"
        - "deny"
    example:
      ip_source: "192.168.0.0/24"
      access_type: "deny"
  iisSettingsUpdate:
    type: "object"
    properties:
      pipeline:
        type: "string"
        description: "type"
        enum:
        - "classic"
        - "managed"
      clr_version:
        type: "string"
        description: "runtime"
        enum:
        - "v1.1"
        - "v2.0"
        - "v4.0"
      status:
        type: "string"
        description: "status"
        enum:
        - "Running"
        - "Disabled"
    example:
      pipeline: "classic"
      clr_version: "v4.0"
      status: "Running"
parameters:
  authorization:
    name: "authorization"
    in: "header"
    description: "Access token"
    required: true
    type: "string"
  package_id:
    name: "package_id"
    in: "path"
    description: "Server package instance id"
    required: true
    type: "integer"
    format: "int64"
  hosting_account_id:
    name: "hosting_account_id"
    in: "path"
    description: "Hosting account unique id (PK). Cannot be changed."
    required: true
    type: "integer"
  ftp_username:
    name: "ftp_username"
    in: "path"
    description: "Current FTP username"
    required: true
    type: "string"
  database_name:
    name: "database_name"
    in: "path"
    description: "Database name"
    required: true
    type: "string"
  db_username:
    name: "db_username"
    in: "path"
    description: "Database user identifier"
    required: true
    type: "string"
  security_rule_id:
    name: "rule_id"
    in: "path"
    description: "ip rule identifier"
    required: true
    type: "string"
responses:
  202Accepted:
    description: "Request is accepted and FabricTask '_utid' is returned"
    schema:
      $ref: "#/definitions/FabricTask"
  400BadRequest:
    description: "Bad request"
    schema:
      $ref: "#/definitions/Error"
  401NotAuthorized:
    description: "Invalid authorization token"
  404HostingNotFound:
    description: "Hosting account not found"
  409DuplicateHosting:
    description: "An existing 'hosting_name' already exists"
  409DuplicateFtpUser:
    description: "An existing ftp 'username' already exists"
  409DuplicateDatabase:
    description: "An existing database 'db_name' already exists"
  default:
    description: "Unexpected error"
    schema:
      $ref: "#/definitions/Error"
