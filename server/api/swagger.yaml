---
swagger: "2.0"
info:
  description: "Wish Fabric API"
  version: "1.0.0"
  title: "Wish Fabric Api - Middleware to Fabric"
  contact:
    email: "you@your-company.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "fabric-core.heg-development.com"
tags:
- name: "HostingAccount"
  description: "Hosting account will include website, storage, AD, quotas."
- name: "FTP"
  description: "FTP user attached to HostingAccount"
- name: "Database"
  description: "Database instance attached to Hosting Account."
- name: "DatabaseBackup"
  description: "Database backup"
- name: "HostingBackup"
  description: "Hosting backup"
- name: "Misc"
  description: "Miscellaneous"
schemes:
- "https"
- "http"
consumes:
- "application/x-www-form-urlencoded"
produces:
- "application/json"
paths:
  /provisioning/hosting:
    post:
      tags:
      - "HostingAccount"
      summary: "Provision a hosting account instance"
      description: "This will create a hosting account instance.\n"
      operationId: "provisioningHostingPOST"
      parameters:
      - name: "hosting_name"
        in: "formData"
        description: "Hosting account (primary domain)"
        required: true
        type: "string"
      - name: "disk_quota"
        in: "formData"
        description: "Webspace quota in MB (0 for unlimited)"
        required: true
        type: "integer"
        format: "int32"
      - name: "ftp_quota"
        in: "formData"
        description: "Max number of FTP users (0 for unlimited)"
        required: true
        type: "integer"
        format: "int32"
      - name: "bandwidth_quota"
        in: "formData"
        description: "Bandwidth quota (0 for unlimited)"
        required: false
        type: "integer"
        format: "int32"
      - name: "hosting_admin_email"
        in: "formData"
        description: "primary username (eg:admin@hosting)"
        required: false
        type: "string"
        default: "admin"
      - name: "region"
        in: "formData"
        description: "Allow region of provisioning"
        required: false
        type: "string"
      responses:
        200:
          description: "FabricTask details"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
  /provisioning/hosting/{hosting_name}:
    get:
      tags:
      - "HostingAccount"
      summary: "Retrieve hosting account details"
      description: "Retrives hosting details\n"
      operationId: "provisioningHostingHosting_nameGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      responses:
        200:
          description: "HostingAccount summary"
          schema:
            $ref: "#/definitions/HostingAccountInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
    put:
      tags:
      - "HostingAccount"
      summary: "Allow disk quotas change. Potentially to be used to move HostingAccount\
        \ to another cluster."
      operationId: "provisioningHostingHosting_namePUT"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain). Cannot be changed"
        required: true
        type: "string"
      - name: "disk_quota"
        in: "formData"
        description: "New storage size quota (MB) (O for unlimited)"
        required: false
        type: "integer"
        format: "int32"
      - name: "ftp_quota"
        in: "formData"
        description: "Number of FTP users (O for unlimited)"
        required: false
        type: "integer"
        format: "int32"
      - name: "bandwidth_quota"
        in: "formData"
        description: "Bandwidth quota (0 for unlimited)"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "FabricTask task details"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
    delete:
      tags:
      - "HostingAccount"
      summary: "Delete hosting account"
      description: "This will remove the hosting account details. AD entries are removed.\
        \ Webspace data are moved to /backup/<snapshot> for x days and\nremoved from\
        \ original location. IIS details are removed. Optional LB info removed (ssl).\
        \ Additional ftp users removed/disabled. Log files\ninto /backup/snapshot/logs/archive.\n"
      operationId: "provisioningHostingHosting_nameDELETE"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      responses:
        200:
          description: "FabricTask task details"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
  /provisioning/hosting/{hosting_name}/status:
    get:
      tags:
      - "HostingAccount"
      summary: "Retrive HostingAccount status"
      description: "Get the status of HostingAccount\n"
      operationId: "provisioningHostingHosting_nameStatusGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      responses:
        200:
          description: "Retrieve HostingAccount status"
          schema:
            $ref: "#/definitions/HostingAccountStatus"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
    put:
      tags:
      - "HostingAccount"
      summary: "Enable/Disable the HostingAccount"
      description: "It enable/disable the HostingAccount\n"
      operationId: "provisioningHostingHosting_nameStatusPUT"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "status"
        in: "formData"
        description: "change hosting account status (enable/disable)"
        required: false
        type: "string"
        enum:
        - "enable"
        - "disable"
      - name: "comments"
        in: "formData"
        description: "Description/reason of change status action"
        required: false
        type: "string"
      responses:
        200:
          description: "Change HostingAccount status"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
  /provisioning/hosting/{hosting_name}/ftp:
    get:
      tags:
      - "FTP"
      summary: "Retrive the list of ftp accounts"
      description: "The list of ftp account info\n"
      operationId: "provisioningHostingHosting_nameFtpGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      responses:
        200:
          description: "Array of FtpUserInfo"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FtpUserInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "FTP"
    post:
      tags:
      - "FTP"
      summary: "Create a ftp user for current HostingAccount"
      description: "Create a ftp user with required parameters\n"
      operationId: "provisioningHostingHosting_nameFtpPOST"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "username"
        in: "formData"
        description: "FTP username"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "FTP password (if not set, it will be generated by WISH Platform)"
        required: false
        type: "string"
      - name: "account_path"
        in: "formData"
        description: "FTP account path relative to hosting webspace. (Default -> root)"
        required: false
        type: "string"
      responses:
        200:
          description: "List of ftp users with details"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FtpUserInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "FTP"
  /provisioning/hosting/{hosting_name}/ftp/{username}:
    get:
      tags:
      - "FTP"
      summary: "Get ftp user"
      description: "Retrieves ftp user account details\n"
      operationId: "provisioningHostingHosting_nameFtpUsernameGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "username"
        in: "path"
        description: "ftp username"
        required: true
        type: "string"
      responses:
        200:
          description: "FTPUserInfo"
          schema:
            $ref: "#/definitions/FtpUserInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "FTP"
    put:
      tags:
      - "FTP"
      summary: "Edit ftp user details"
      description: "Edit ftp user. Cannot edit username.\n"
      operationId: "provisioningHostingHosting_nameFtpUsernamePUT"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "username"
        in: "path"
        description: "ftp username"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "Change ftp user password"
        required: false
        type: "string"
      - name: "ftp_quota"
        in: "formData"
        description: "Change ftp user quota"
        required: false
        type: "string"
      - name: "ftp_path"
        in: "formData"
        description: "Change ftp account path"
        required: false
        type: "string"
      responses:
        200:
          description: "FabricTask for FTPUserInfo edit"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "FTP"
    delete:
      tags:
      - "FTP"
      summary: "Delete ftp user"
      description: "It will remove the ftp user. Cannot remove primary ftp account\
        \ (admin@hosting_name)\n"
      operationId: "provisioningHostingHosting_nameFtpUsernameDELETE"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "username"
        in: "path"
        description: "ftp username"
        required: true
        type: "string"
      responses:
        200:
          description: "FabricTask for FTPUserInfo delete"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "FTP"
  /provisioning/hosting/{hosting_name}/databases:
    get:
      tags:
      - "Database"
      summary: "Retrieve hosting account databases list"
      description: "Retrives the list of provisioned databases with details\n"
      operationId: "provisioningHostingHosting_nameDatabasesGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      responses:
        200:
          description: "Array of DatabaseInfo"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DatabaseInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
    post:
      tags:
      - "Database"
      summary: "Provision a new database on hosting cluster"
      description: "Create a database instance with required parameters. We assume\
        \ a group of WebClusters will have own database cluster.\n"
      operationId: "provisioningHostingHosting_nameDatabasesPOST"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "database_name"
        in: "formData"
        description: "Database username (if not set, it will be generated)"
        required: false
        type: "string"
      - name: "username"
        in: "formData"
        description: "Database username (if not set, it will be generated)"
        required: false
        type: "string"
      - name: "password"
        in: "formData"
        description: "Database password (if not set, it will be generated)"
        required: false
        type: "string"
      - name: "database_type"
        in: "formData"
        description: "Database engine. Default Mysql engine"
        required: false
        type: "string"
        enum:
        - "Mysql"
        - "MSsql"
      - name: "db_size"
        in: "formData"
        description: "Max database size (MB)"
        required: false
        type: "integer"
      responses:
        200:
          description: "Database details"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
  /provisioning/hosting/{hosting_name}/database/{database_name}:
    get:
      tags:
      - "HostingAccount"
      summary: "Query database info"
      description: "Retrieve database specific details\n"
      operationId: "provisioningHostingHosting_nameDatabaseDatabase_nameGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "database_name"
        in: "path"
        description: "Database identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Database Info"
          schema:
            $ref: "#/definitions/DatabaseInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingAccount"
    put:
      tags:
      - "Database"
      summary: "Edit database details"
      description: "Edit database details. Support database id or name \"/provisioning/hosting/{hosting_name}/database/{database_name}\"\
        \n"
      operationId: "provisioningHostingHosting_nameDatabaseDatabase_namePUT"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "database_name"
        in: "path"
        description: "Database identifier"
        required: true
        type: "string"
      - name: "db_size"
        in: "formData"
        description: "Max database size (MB)"
        required: false
        type: "integer"
      - name: "users"
        in: "formData"
        description: "List of users"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Database edit"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
    delete:
      tags:
      - "Database"
      summary: "Remove database"
      description: "It will remove the database and move it to snapshot for 30 days.\n"
      operationId: "provisioningHostingHosting_nameDatabaseDatabase_nameDELETE"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "database_name"
        in: "path"
        description: "Database identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Database delete"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
  /provisioning/hosting/{hosting_name}/database/{database_name}/backups:
    get:
      tags:
      - "DatabaseBackup"
      summary: "Get database backups"
      description: "Get database backups"
      operationId: "provisioningHostingHosting_nameDatabaseDatabase_nameBackupsGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "database_name"
        in: "path"
        description: "Database name"
        required: true
        type: "string"
      responses:
        200:
          description: "Backup current database"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BackupInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "DatabaseBackup"
    post:
      tags:
      - "DatabaseBackup"
      summary: "Backup current database"
      description: "Create a database backup with required parameters. No idea where\
        \ platform will store it.\n"
      operationId: "provisioningHostingHosting_nameDatabaseDatabase_nameBackupsPOST"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "database_name"
        in: "path"
        description: "Database name"
        required: true
        type: "string"
      responses:
        200:
          description: "Backup current database"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "DatabaseBackup"
  /provisioning/hosting/{hosting_name}/database/{database_name}/restores:
    get:
      tags:
      - "DatabaseBackup"
      summary: "Get database restores"
      description: "Get database restore history"
      operationId: "provisioningHostingHosting_nameDatabaseDatabase_nameRestoresGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "database_name"
        in: "path"
        description: "Database name"
        required: true
        type: "string"
      responses:
        200:
          description: "Backup current database"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RestoreInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "DatabaseBackup"
    post:
      tags:
      - "DatabaseBackup"
      summary: "Restore current database from last known backup for specified database."
      description: "Restore a database backup with required parameters. No idea where\
        \ platform will store it.\n"
      operationId: "provisioningHostingHosting_nameDatabaseDatabase_nameRestoresPOST"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "database_name"
        in: "path"
        description: "Database name to be restored to."
        required: true
        type: "string"
      - name: "username"
        in: "formData"
        description: "Database username (if not set, it will be generated)"
        required: false
        type: "string"
      responses:
        200:
          description: "Restore current database"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "DatabaseBackup"
  /provisioning/hosting/{hosting_name}/database/user:
    get:
      tags:
      - "Database"
      summary: "Retrieve a list of database users"
      description: "Retrieve the list of database users for a hosting account\n"
      operationId: "provisioningHostingHosting_nameDatabaseUserGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      responses:
        200:
          description: "Retrieve the list of database users for a hosting account"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DatabaseUserInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
    post:
      tags:
      - "Database"
      summary: "Create a new database user"
      description: "Create a new database user\n"
      operationId: "provisioningHostingHosting_nameDatabaseUserPOST"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "username"
        in: "formData"
        description: "server username"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "password (autogenerated if not provided)"
        required: false
        type: "string"
      - name: "grant"
        in: "formData"
        description: "array of type Grant"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Create a new database user on cluster and optionally grant\
            \ permissions to a set of databases"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
  /provisioning/hosting/{hosting_name}/database/user/{user_name}:
    get:
      tags:
      - "Database"
      summary: "Get an existing database user"
      operationId: "provisioningHostingHosting_nameDatabaseUserUser_nameGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "user_name"
        in: "path"
        description: "user identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Get an existing database user"
          schema:
            $ref: "#/definitions/DatabaseUserInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
    put:
      tags:
      - "Database"
      summary: "Update an existing database user"
      operationId: "provisioningHostingHosting_nameDatabaseUserUser_namePUT"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "Hosting account (primary domain)"
        required: true
        type: "string"
      - name: "user_name"
        in: "path"
        description: "User identifier"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "password (autogenerated if not provided)"
        required: false
        type: "string"
      - name: "grant"
        in: "formData"
        description: "array of type Grant"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Update an existing database user"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
    delete:
      tags:
      - "Database"
      summary: "Delete an existing database user"
      operationId: "provisioningHostingHosting_nameDatabaseUserUser_nameDELETE"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "user_name"
        in: "path"
        description: "user identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Delete an existing database user"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Database"
  /provisioning/hosting/{hosting_name}/backups:
    get:
      tags:
      - "HostingBackup"
      summary: "Get webspace backups"
      description: "Get list of available webspace backups\n"
      operationId: "provisioningHostingHosting_nameBackupsGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      responses:
        200:
          description: "List of"
          schema:
            $ref: "#/definitions/BackupInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingBackup"
    post:
      tags:
      - "HostingBackup"
      summary: "Backup current webspace"
      description: "Create a webspace backup with required parameters. No idea where\
        \ platform will store it.\n"
      operationId: "provisioningHostingHosting_nameBackupsPOST"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "backup_source"
        in: "formData"
        description: "Path to folders to backup (if root, then full backup)"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Backup current webspace"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingBackup"
  /provisioning/hosting/{hosting_name}/restores:
    get:
      tags:
      - "HostingBackup"
      summary: "Get hosting restoration history"
      description: "Get hosting restoration history"
      operationId: "provisioningHostingHosting_nameRestoresGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      responses:
        200:
          description: "Restore current webspace"
          schema:
            $ref: "#/definitions/RestoreInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingBackup"
    post:
      tags:
      - "HostingBackup"
      summary: "Restore current webspace from last known backup for specified webspace."
      description: "Restore a webspace backup with required parameters. No idea where\
        \ platform will store it.\n"
      operationId: "provisioningHostingHosting_nameRestoresPOST"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "archieve_name"
        in: "formData"
        description: "if not provided restore last backup"
        required: false
        type: "string"
      responses:
        200:
          description: "Restore current webspace"
          schema:
            $ref: "#/definitions/FabricTask"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "HostingBackup"
  /provisioning/misc/{hosting_name}/ls/{depth}:
    get:
      tags:
      - "Misc"
      summary: "Retrieve list of dirs starting from hosting's root folder"
      description: "Retrieve list of dirs starting from hosting's root folder"
      operationId: "provisioningMiscHosting_nameLsDepthGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "depth"
        in: "path"
        description: "depth level of folders to display"
        required: true
        type: "integer"
      responses:
        200:
          description: "List of dirs (JSON)"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
  /provisioning/misc/{hosting_name}/security/access:
    get:
      tags:
      - "Misc"
      summary: "Retrieve list of IP access security rules"
      description: "Retrieve list of IP access security rules"
      operationId: "provisioningMiscHosting_nameSecurityAccessGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      responses:
        200:
          description: "list of IP Security Rules (JSON)"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IPSecurity"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
    post:
      tags:
      - "Misc"
      summary: "Add IP access security rule"
      description: "Add IP access security rule"
      operationId: "provisioningMiscHosting_nameSecurityAccessPOST"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "ip_source"
        in: "formData"
        description: "source ip of the request"
        required: true
        type: "string"
      - name: "access_type"
        in: "formData"
        description: "allow or Deny"
        required: true
        type: "string"
        enum:
        - "allow"
        - "deny"
      responses:
        200:
          description: "Identifier for new rule"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
  /provisioning/misc/{hosting_name}/security/access/{rule_id}:
    put:
      tags:
      - "Misc"
      summary: "Modify IP access security rule"
      description: "Modify IP access security rule"
      operationId: "provisioningMiscHosting_nameSecurityAccessRule_idPUT"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "rule_id"
        in: "path"
        description: "ip rule identifier"
        required: true
        type: "string"
      - name: "access_type"
        in: "formData"
        description: "allow or Deny"
        required: true
        type: "string"
        enum:
        - "allow"
        - "deny"
      responses:
        200:
          description: "Operation status"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
    delete:
      tags:
      - "Misc"
      summary: "Remove IP access security rule"
      description: "Remove IP access security rule"
      operationId: "provisioningMiscHosting_nameSecurityAccessRule_idDELETE"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: "hosting account (primary domain)"
        required: true
        type: "string"
      - name: "rule_id"
        in: "path"
        description: "ip rule identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Operation status"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
  /provisioning/misc/{hosting_name}/iis_settings:
    get:
      tags:
      - "Misc"
      summary: "Get all iis settings for hosting"
      operationId: "provisioningMiscHosting_nameIis_settingsGET"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AppPoolInfo"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
    put:
      tags:
      - "Misc"
      summary: "Update an IIS Setting"
      operationId: "provisioningMiscHosting_nameIis_settingsPUT"
      parameters:
      - name: "hosting_name"
        in: "path"
        description: ""
        required: true
        type: "string"
      - name: "framework_version"
        in: "formData"
        description: "asp net framework version"
        required: false
        type: "string"
        enum:
        - "Classic"
        - "Integrated"
      - name: "app_pool_mode"
        in: "formData"
        description: "application pool mode"
        required: false
        type: "string"
        enum:
        - "v1_1"
        - "v2_0"
        - "v4_0"
      - name: "app_pool_status"
        in: "formData"
        description: "application pool status"
        required: false
        type: "string"
        enum:
        - "started"
        - "stopped"
        - "recycle"
        - "unknown"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Misc"
  /ping:
    get:
      tags:
      - "HealthCheck"
      summary: "Server heartbeat operation"
      description: "Server heartbeat operation"
      operationId: "pingGET"
      parameters: []
      responses:
        200:
          description: "OK"
      x-swagger-router-controller: "HealthCheck"
definitions:
  FabricTask:
    type: "object"
    properties:
      _utid:
        type: "string"
        format: "uuid"
        example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
        description: "Fabric task identifier"
      status:
        type: "string"
        example: "pending"
        description: "Fabric task status/progress"
        enum:
        - "pending"
        - "completed"
        - "error"
  HostingAccountStatus:
    type: "object"
    required:
    - "hosting_name"
    properties:
      hosting_name:
        type: "string"
        example: "example.com"
        description: "HostingAccount name (primary domain)"
      status:
        type: "string"
        example: "enabled"
        description: "HostingAccount status"
        enum:
        - "enabled"
        - "disabled"
      comments:
        type: "string"
        example: "Enabled after successful payment"
        description: "Reason of enable/disable change"
  HostingAccountInfo:
    type: "object"
    required:
    - "hosting_account_id"
    - "hosting_name"
    properties:
      hosting_account_id:
        type: "integer"
        format: "int64"
        example: 1234567
        description: "Fabric hosting_acount_id (PK)"
      hosting_name:
        type: "string"
        example: "example.com"
        description: "hosting account (primary domain)"
      ftp_quota:
        $ref: "#/definitions/QuotaInfo"
      disk_quota:
        $ref: "#/definitions/QuotaInfo"
      bandwidth_quota:
        $ref: "#/definitions/QuotaInfo"
      stats_json_url:
        type: "string"
        description: "json endpoint to for chart data"
  QuotaInfo:
    type: "object"
    properties:
      max_available:
        type: "integer"
        description: "Max quota for X feature"
      consumed:
        type: "integer"
        description: "Consumed for X feature"
      details:
        type: "string"
        description: "Quota size measure unit (eg. MB)"
  FtpUserInfo:
    type: "object"
    properties:
      user_id:
        type: "string"
        description: "FTP user unique identifier"
      username:
        type: "string"
        example: "admin@example.com"
        description: "FTP username"
      quota:
        type: "integer"
        example: 200
        description: "FTP account quota"
      ftp_path:
        type: "string"
        example: "/www-data"
        description: "FTP account directory"
  DatabaseInfo:
    type: "object"
    properties:
      database_id:
        type: "integer"
        format: "int64"
        example: 123456
        description: "Database unique identifier"
      database_name:
        type: "string"
        example: "example-db"
        description: "Database name"
      database_cluster:
        type: "string"
        example: "cluster-mysql-01"
        description: "Database cluster"
      engine_type:
        type: "string"
        example: "Mysql"
        description: "Database engine type"
      db_size:
        type: "integer"
        example: 500
        description: "Database max size (MB)"
      db_actual_size:
        type: "integer"
        example: 0
        description: "Database actual size (MB)"
      users:
        type: "array"
        items:
          $ref: "#/definitions/DatabaseUserInfo"
      db_connection:
        type: "string"
        example: "Server=cluster-mysql-01;Database=example-db;Uid=db-user;Pwd=secret;"
        description: "Friendly DB connection string (eg. ssl, port, etc)"
  DatabaseUserInfo:
    type: "object"
    properties:
      user_id:
        type: "string"
        example: "db-user"
        description: "Database user identifier"
      password:
        type: "string"
      databases:
        type: "array"
        items:
          $ref: "#/definitions/Grant"
  Grant:
    type: "object"
    properties:
      database_id:
        type: "string"
        description: "Database identifier"
      permissions:
        type: "string"
        description: "Grant details"
        enum:
        - "read"
        - "write"
  IPSecurity:
    type: "object"
    properties:
      rule_id:
        type: "string"
        description: "Access rule identifier"
      ip_source:
        type: "string"
        description: "IP Address"
      access_type:
        type: "string"
        description: "Access Type"
        enum:
        - "allow"
        - "deny"
  BackupInfo:
    type: "object"
    properties:
      name:
        type: "string"
      type:
        type: "string"
        description: "Web Space or database"
        enum:
        - "storage"
        - "database"
      status:
        type: "string"
        description: "operation status"
        enum:
        - "completed"
        - "inprogress"
        - "faulted"
      completed_date:
        type: "string"
        format: "date-time"
  RestoreInfo:
    allOf:
    - $ref: "#/definitions/BackupInfo"
    - properties:
        error:
          type: "string"
  AppPoolInfo:
    type: "object"
    properties:
      name:
        type: "string"
      pipeline:
        type: "string"
        description: "type"
        enum:
        - "classic"
        - "managed"
      clr_version:
        type: "string"
        description: "runtime"
        enum:
        - "v1.1"
        - "v2.0"
        - "v4.0"
      status:
        type: "string"
        description: "status"
        enum:
        - "started"
        - "stopped"
        - "recycle"
        - "unknown"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      fields:
        type: "string"
