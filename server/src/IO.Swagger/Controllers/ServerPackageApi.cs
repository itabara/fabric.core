/*
 * Wish Fabric Api - Middleware to Fabric
 *
 * Wish Fabric API (Integration)
 *
 * OpenAPI spec version: 1.0.1
 * Contact: you@your-company.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class ServerPackageApiController : Controller
    { 

        /// <summary>
        /// Provision a server package instance with limits defined by Brand API
        /// </summary>
        /// <remarks>This will create a server package instance. Package definition available at http://brand-api.heg-development.com/api/v1.0/windows/1 </remarks>
        /// <param name="authorization">Access token</param>
        /// <param name="packageInfo">The server package to be provisioned</param>
        /// <response code="202">Request is accepted and FabricTask &#39;_utid&#39; is returned</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Invalid authorization token</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/provisioning/package")]
        [SwaggerOperation("CreateServerPackage")]
        [SwaggerResponse(200, type: typeof(FabricTask))]
        public virtual IActionResult CreateServerPackage([FromHeader]string authorization, [FromBody]ServerPackage packageInfo)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FabricTask>(exampleJson)
            : default(FabricTask);
            return new ObjectResult(example);
        }
    }
}
