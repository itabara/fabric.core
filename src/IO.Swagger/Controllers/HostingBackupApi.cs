/*
 * Wish Fabric.Core Api - Middleware to Fabric.Core
 *
 * Wish Fabric.Core API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class HostingBackupApiController : Controller
    { 

        /// <summary>
        /// Backup hosting account webspace
        /// </summary>
        /// <remarks>Create a webspace backup with required parameters. Platform will manage the backup files </remarks>
        /// <param name="authorization">Access token</param>
        /// <param name="hostingName">hosting account (primary domain)</param>
        /// <param name="backupSource">Path to folders to backup (if root, then full backup)</param>
        /// <response code="200">Backup current webspace</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/itabara/Fabric.Core/1.0.0/provisioning/hosting/{hosting_name}/backups")]
        [SwaggerOperation("ProvisioningHostingHostingNameBackupsPost")]
        [SwaggerResponse(200, type: typeof(FabricTask))]
        public virtual IActionResult ProvisioningHostingHostingNameBackupsPost([FromHeader]string authorization, [FromRoute]string hostingName, [FromBody]BackupSource backupSource)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FabricTask>(exampleJson)
            : default(FabricTask);
            return new ObjectResult(example);
        }
    }
}
